quarkus.log.category."org.hibernate.SQL".level=DEBUG
quarkus.log.category."org.hibernate.type.descriptor.sql".level=TRACE

# CORS
quarkus.http.cors=true
%dev.quarkus.http.cors.origins=/.*/
%prod.quarkus.http.cors.origins=/.*/
quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with
quarkus.http.cors.methods=GET, POST, PUT, DELETE
quarkus.http.cors.access-control-allow-credentials=true

# Swagger ui
quarkus.swagger-ui.always-include=true
quarkus.smallrye-openapi.path=/openapi

# Database configurations for production
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=admin
%dev.quarkus.datasource.password=pass
%dev.quarkus.datasource.reactive.url=postgresql://localhost:5432/ors
%dev.quarkus.hibernate-orm.database.generation=update
%dev.quarkus.datasource.devservices.init-script-path=db-init.sql

%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=admin
%prod.quarkus.datasource.password=pass
%prod.quarkus.datasource.reactive.url=postgresql://postgres-db:5432/ors

quarkus.smallrye-health.ui.always-include=true

# kafka.bootstrap.servers=localhost:9092
# %prod.kafka.bootstrap.servers=kafka:9092

quarkus.http.port=8082

# Kafka Producer Configuration
mp.messaging.outgoing.orders-out.connector=smallrye-kafka
mp.messaging.outgoing.orders-out.topic=orders

# quarkus.log.category."org.apache.kafka.clients".level=DEBUG
# quarkus.log.category."org.apache.kafka.common.utils".level=DEBUG


quarkus.rest-client.assignments-api.url=http://0.0.0.0:8084
%prod.quarkus.rest-client.assignments-api.url=http://assignment-service:8084
quarkus.rest-client.printer-api.url=http://0.0.0.0:8083
%prod.quarkus.rest-client.printer-api.url=http://printer-service:8083

quarkus.vertx.use-async-dns=false

# quarkus.log.level=DEBUG

# Make sure the application domain is prefixed with 'https://'
quarkus.oidc.auth-server-url=https://cognito-idp.us-west-2.amazonaws.com/us-west-2_iJiGy3cGh
quarkus.oidc.application-type=service
quarkus.oidc.client-id=tk6art7ckgubm35aejqcu6cmd
quarkus.oidc.credentials.secret=${CLIENT_SECRET}
quarkus.oidc.token-state-manager.split-tokens=true
quarkus.oidc.roles.role-claim-path=cognito:groups
quarkus.oidc.authentication.scopes=openid,profile 

# OIDC and Vert.x related logging
quarkus.log.category."io.quarkus.oidc".level=DEBUG
quarkus.log.category."io.vertx.ext.web".level=DEBUG
quarkus.log.category."io.quarkus.vertx.http.runtime".level=DEBUG

# Additional logging for OIDC token and authentication
quarkus.log.category."io.quarkus.oidc.runtime.OidcProvider".level=DEBUG
quarkus.log.category."io.quarkus.oidc.runtime.OidcAuthenticationMechanism".level=DEBUG

# quarkus.oidc.end-session-path=https://ors.auth.us-west-2.amazoncognito.com/logout
# # quarkus.oidc.logout.post-logout-uri-param=returnTo 
# # quarkus.oidc.logout.extra-params.client_id=${quarkus.oidc.client-id} 
# quarkus.oidc.logout.path=/logout 
# quarkus.oidc.logout.post-logout-path=/hello/post-logout 

# quarkus.http.auth.permission.authenticated.paths=/logout
# quarkus.http.auth.permission.authenticated.policy=authenticated
